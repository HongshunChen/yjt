!function(t){function e(o){if(n[o])return n[o].exports;var s=n[o]={exports:{},id:o,loaded:!1};return t[o].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){!function(t){function e(o){if(n[o])return n[o].exports;var s=n[o]={exports:{},id:o,loaded:!1};return t[o].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e){/*!
		 * kontext
		 * http://lab.hakim.se/kontext
		 * MIT licensed
		 *
		 * Copyright (C) 2013 Hakim El Hattab, http://hakim.se
		 */
window.kontext=function(t){function e(e,n){a=Array.prototype.slice.call(t.querySelectorAll(".layer")),t.classList.add("animate"),n=n||(e>s()?"right":"left"),"string"==typeof e&&(e=parseInt(e)),"number"!=typeof e&&(e=s(e)),e=Math.max(Math.min(e,a.length),0),a[e]&&!a[e].classList.contains("show")&&(a.forEach(function(t,e){t.classList.remove("left","right"),t.classList.add(n),t.classList.contains("show")?(t.classList.remove("show"),t.classList.add("hide")):t.classList.remove("hide")}),a[e].classList.add("show"),i.dispatch(a[e],e))}function n(){var t=s()-1;e(t>=0?t:a.length+t,"left")}function o(){e((s()+1)%a.length,"right")}function s(t){var e=0;return a.forEach(function(n,o){return t&&t==n||!t&&n.classList.contains("show")?void(e=o):void 0}),e}function r(){return a.length}var i=new kontext.Signal,a=Array.prototype.slice.call(t.querySelectorAll(".layer")),c="WebkitPerspective"in document.body.style||"MozPerspective"in document.body.style||"msPerspective"in document.body.style||"OPerspective"in document.body.style||"perspective"in document.body.style;return c&&t.classList.add("capable"),a.forEach(function(t,e){if(!t.querySelector(".dimmer")){var n=document.createElement("div");n.className="dimmer",t.appendChild(n)}}),{show:e,prev:n,next:o,getIndex:s,getTotal:r,changed:i}},kontext.Signal=function(){this.listeners=[]},kontext.Signal.prototype.add=function(t){this.listeners.push(t)},kontext.Signal.prototype.remove=function(t){var e=this.listeners.indexOf(t);e>=0&&this.listeners.splice(e,1)},kontext.Signal.prototype.dispatch=function(){var t=Array.prototype.slice.call(arguments);this.listeners.forEach(function(e,n){e.apply(null,t)})}}])}]);